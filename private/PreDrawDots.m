function PreDrawDots()
% Preparing everything for drawing. Just screen('Flip', window) is misssing
global BpodSystem
global TaskParameters
%Use the equation of an ellipse to determine which dots fall inside.
goodDots = ...
    (BpodSystem.Data.Custom.rDots.x-TaskParameters.GUI.centerX).^2/...
        (TaskParameters.GUI.apertureSizeWidth/2)^2 + ...
    (BpodSystem.Data.Custom.rDots.y-TaskParameters.GUI.centerY).^2/...
        (TaskParameters.GUI.apertureSizeHeight/2)^2 ...
    < 1;

%convert from degrees to screen pixels
pixpos.x = ...
    Angle2Pix(TaskParameters.GUI.screenWidthCm,...
        BpodSystem.Data.Custom.visual.windowRect(3),...
        TaskParameters.GUI.screenDistCm,BpodSystem.Data.Custom.rDots.x)+...
    BpodSystem.Data.Custom.visual.windowRect(3)/2;
pixpos.y = ...
    Angle2Pix(TaskParameters.GUI.screenWidthCm,...
        BpodSystem.Data.Custom.visual.windowRect(3),...
        TaskParameters.GUI.screenDistCm,BpodSystem.Data.Custom.rDots.y)+...
    BpodSystem.Data.Custom.visual.windowRect(4)/2;

WHITE=1; % [255,255,255];
Screen('DrawDots',BpodSystem.Data.Custom.visual.window,...
    [pixpos.x(goodDots);pixpos.y(goodDots)], ...
    BpodSystem.Data.Custom.rDots.dotSizePx, WHITE,[0,0],1);
%Screen('DrawingFinished',BpodSystem.Data.Custom.visual.window);

firstIdx = 1;
lastIdx = 0;
for directionIdx = 1:length(BpodSystem.Data.Custom.rDots.directions)
    lastIdx = ...
       lastIdx + BpodSystem.Data.Custom.rDots.directionNDots(directionIdx);
    %update the dot position
    BpodSystem.Data.Custom.rDots.x(firstIdx:lastIdx) = ...
        BpodSystem.Data.Custom.rDots.x(firstIdx:lastIdx) + ...
        BpodSystem.Data.Custom.rDots.dx(directionIdx);
    BpodSystem.Data.Custom.rDots.y(firstIdx:lastIdx) = ...
        BpodSystem.Data.Custom.rDots.y(firstIdx:lastIdx) + ...
        BpodSystem.Data.Custom.rDots.dy(directionIdx);
    firstIdx = lastIdx + 1;
end

%move the dots that are outside the aperture back one aperture
%width.
BpodSystem.Data.Custom.rDots.x(...
    BpodSystem.Data.Custom.rDots.x<BpodSystem.Data.Custom.rDots.l) = ...
        BpodSystem.Data.Custom.rDots.x(BpodSystem.Data.Custom.rDots.x<...
                                       BpodSystem.Data.Custom.rDots.l) +...
        TaskParameters.GUI.apertureSizeWidth;
BpodSystem.Data.Custom.rDots.x(...
    BpodSystem.Data.Custom.rDots.x>BpodSystem.Data.Custom.rDots.r) = ...
        BpodSystem.Data.Custom.rDots.x(BpodSystem.Data.Custom.rDots.x>...
                                       BpodSystem.Data.Custom.rDots.r) -...
        TaskParameters.GUI.apertureSizeWidth;
BpodSystem.Data.Custom.rDots.y(...
    BpodSystem.Data.Custom.rDots.y<BpodSystem.Data.Custom.rDots.b) = ...
        BpodSystem.Data.Custom.rDots.y(BpodSystem.Data.Custom.rDots.y<...
                                       BpodSystem.Data.Custom.rDots.b) +...
        TaskParameters.GUI.apertureSizeHeight;
BpodSystem.Data.Custom.rDots.y(...
    BpodSystem.Data.Custom.rDots.y>BpodSystem.Data.Custom.rDots.t) = ...
        BpodSystem.Data.Custom.rDots.y(BpodSystem.Data.Custom.rDots.y>...
                                       BpodSystem.Data.Custom.rDots.t) -...
        TaskParameters.GUI.apertureSizeHeight;

%increment the 'life' of each dot
BpodSystem.Data.Custom.rDots.dotsLife = ...
                                   BpodSystem.Data.Custom.rDots.dotsLife+1;

%find the 'dead' dots
deadDots = mod(BpodSystem.Data.Custom.rDots.dotsLife,...
               BpodSystem.Data.Custom.rDots.lifetime) == 0;

%replace the positions of the dead dots to a random location
BpodSystem.Data.Custom.rDots.x(deadDots) = (rand(1,sum(deadDots))-.5)*...
    TaskParameters.GUI.apertureSizeWidth + TaskParameters.GUI.centerX;
BpodSystem.Data.Custom.rDots.y(deadDots) = (rand(1,sum(deadDots))-.5)*...
    TaskParameters.GUI.apertureSizeHeight + TaskParameters.GUI.centerY;
end
